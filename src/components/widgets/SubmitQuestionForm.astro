---
import QuestionsAndAnswers from '~/components/widgets/QuestionsAndAnswers.astro';
---

<div class="bg-gray-100 dark:bg-gray-700 font-sans text-gray-800 dark:text-white">
  <div class="max-w-6xl mx-auto p-6">
    <div class="grid grid-cols-1 md:grid-cols-2 bg-white dark:bg-gray-700 rounded-lg shadow-md overflow-hidden">
      <!-- Guidelines Section -->
      <div class="bg-blue-50 p-6 border-r border-blue-100 text-black">
        <h2 class="text-2xl font-semibold mb-4">Guidelines for Asking Questions</h2>
        <ul class="list-disc list-inside space-y-2 text-base leading-relaxed">
          <li><strong>Be respectful</strong> â€“ Ask with curiosity, not judgment.</li>
          <li><strong>Stay on topic</strong> â€“ Bioinformatics, careers, equity in STEM, etc.</li>
          <li><strong>Keep it appropriate</strong> â€“ Avoid intrusive or overly personal questions.</li>
          <li><strong>No discrimination</strong> â€“ Sexist, racist, or offensive questions will be removed.</li>
          <li><strong>Be clear</strong> â€“ Concise and thoughtful questions are more likely to be answered.</li>
          <li><strong>Anonymous is okay!</strong> â€“ But always be respectful.</li>
        </ul>
      </div>

      <!-- Form Section -->
      <div class="p-6">
        <h2 class="text-2xl font-semibold mb-4">Submit Your Question</h2>
        <form id="ama-form" name="ama-form" class="space-y-4">
          <input type="hidden" name="form-name" value="ama-form" />

          <div>
            <label for="name" class="block font-medium text-base">Name (optional)</label>
            <input
              type="text"
              id="name"
              name="name"
              placeholder="Enter your name or leave blank"
              class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 text-base focus:ring-blue-500 focus:border-blue-500 text-black"
            />
          </div>

          <div>
            <label for="school" class="block font-medium text-base">Your Grade and School Name (optional)</label>
            <input
              type="text"
              id="school"
              name="school"
              placeholder="Enter your grade and school name (optional)"
              class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 text-base focus:ring-blue-500 focus:border-blue-500 text-black"
            />
          </div>

          <div>
            <label for="email" class="block font-medium text-base">Email (optional)</label>
            <input
              type="email"
              id="email"
              name="email"
              placeholder="Enter your email (yours or parent/guardianâ€™s)"
              class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 text-base focus:ring-blue-500 focus:border-blue-500 text-black"
            />
          </div>

          <div>
            <label for="question" class="block font-medium text-base"
              >Your Question <span class="text-red-500 dark:text-green-400">*</span></label
            >
            <textarea
              id="question"
              name="question"
              required
              placeholder="Ask your question here..."
              class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 text-base h-32 resize-vertical focus:ring-blue-500 focus:border-blue-500 text-black"
            ></textarea>

            <!-- Random Button Generators -->
            <div class="mb-3">
              <div class="mt-1">
                <div class="font-semibold text-gray-500 dark:text-white block mb-2 text-sm">
                  Need inspiration? Try a random question:
                </div>
                <div class="flex flex-wrap gap-2">
                  <button
                    type="button"
                    id="random-question-btn"
                    class="font-semibold bg-purple-500 hover:bg-purple-600 text-white text text-sm px-2 py-1 rounded-full shadow-md hover:shadow-lg hover:scale-105 transition-transform"
                  >
                    ðŸŽ² Any Topic
                  </button>
                  <button
                    type="button"
                    id="random-career-btn"
                    class="font-semibold bg-blue-400 hover:bg-blue-500 text-white text-sm px-2 py-1 rounded-full shadow-md hover:shadow-lg hover:scale-105 transition-transform"
                  >
                    ðŸ’¼ Career
                  </button>
                  <button
                    type="button"
                    id="random-science-btn"
                    class="font-semibold bg-orange-400 hover:bg-orange-500 text-white text-sm px-2 py-1 rounded-full shadow-md hover:shadow-lg hover:scale-105 transition-transform"
                  >
                    ðŸ”¬ Science
                  </button>
                  <button
                    type="button"
                    id="random-fun-btn"
                    class="font-semibold bg-green-400 hover:bg-green-500 text-white text-sm px-2 py-1 rounded-full shadow-md hover:shadow-lg hover:scale-105 transition-transform"
                  >
                    ðŸ¤ª Fun
                  </button>
                </div>
              </div>

              <div class="flex items-start my-3">
                <input type="checkbox" id="agree" name="agree" required class="w-6 h-6 mr-2" />
                <label for="agree" class="text-base">
                  I have read and agree to follow the question guidelines.
                  <span class="text-red-500 dark:text-green-400">*</span></label
                >
              </div>

              <div>
                <button
                  type="submit"
                  class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-base font-medium disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  Submit Question
                </button>
              </div>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Backend Code to Handle Submission Form -->
  <script is:inline>
    // Categorized questions for more targeted randomness
    const questionCategories = {
      career: [
        'How did you get started in bioinformatics?',
        'How long does it take to become a bioinformatician?',
        'What is the hardest part of your job?',
        'What educational path would you recommend for aspiring bioinformaticians?',
        'What is the coolest part of your job?',
        "What's the most important skill for success in bioinformatics?",
        "What's the biggest breakthrough you've seen in bioinformatics recently?",
        'How do you know what parts of DNA are junk and what parts are important?',
        'How do you get DNA data into a computer in the first place?',
        'Can you use a computer predict if someone will get sick in the future?',
        'What kind of math do you use in bioinformatics?',
        'Do you ever work with doctors or nurses?',
        'What is the difference between a bioinformatician and a biologist?',
        'What is the difference between a bioinformatician and a computer scientist?',
      ],
      fun: [
        'Is DNA like spaghetti?',
        'Do animals have different shaped DNA than people?',
        'Can you change DNA to give someone super powers?',
        'Can you fix DNA if it gets broken, like a toy?',
        'Could you make a unicorn with science?',
        'If DNA is in all my cells, does that mean itâ€™s in my boogers too?',
        'Does DNA ever get dizzy from spinning?',
        'Can DNA tell you if you like pizza or ice cream better?',
        'Can you make a dinosaur out of chicken DNA?',
      ],
      science: [
        'Why are bugs so tiny but whales so big?',
        'Can you see DNA with a magnifying glass?',
        'If DNA tells your body what to do, who tells the DNA what to do?',
        'How do plants know which way to grow?',
        'Why do we get sick?',
        'How do you find the gene that causes a disease?',
        'How do you tell which gene came from your mom or dad?',
      ],
    };

    // Get all questions in a flat array
    const allQuestions = Object.values(questionCategories).flat();

    // Function to get random question from a specific category or all
    function getRandomQuestion(category = 'all') {
      let questionPool;

      if (category === 'all') {
        questionPool = allQuestions;
      } else if (questionCategories[category]) {
        questionPool = questionCategories[category];
      } else {
        questionPool = allQuestions;
      }

      const randomIndex = Math.floor(Math.random() * questionPool.length);
      return questionPool[randomIndex];
    }

    // Function with typing animation
    function insertRandomQuestion(category = 'all') {
      const questionField = document.getElementById('question');
      const randomQuestion = getRandomQuestion(category);

      // Clear field and show loading
      questionField.value = '';
      questionField.placeholder = 'Generating question...';

      // Add a slight delay for effect
      setTimeout(() => {
        questionField.placeholder = 'Ask your question here...';

        // Typing animation
        let i = 0;
        const typingSpeed = 25;

        const typeWriter = () => {
          if (i < randomQuestion.length) {
            questionField.value += randomQuestion.charAt(i);
            i++;
            setTimeout(typeWriter, typingSpeed);
          } else {
            // Add cursor blink effect at the end
            questionField.focus();
            questionField.setSelectionRange(questionField.value.length, questionField.value.length);
          }
        };

        typeWriter();
      }, 300);

      // Clear any existing errors
      const errorElement = questionField.parentNode.querySelector('.error-message');
      if (errorElement) {
        errorElement.remove();
      }
      questionField.classList.remove('border-red-500', 'focus:border-red-500');
    }

    // Event listeners
    document.addEventListener('DOMContentLoaded', function () {
      // Main random button
      const randomButton = document.getElementById('random-question-btn');
      if (randomButton) {
        randomButton.addEventListener('click', () => insertRandomQuestion());
      }

      // Category-specific buttons (if you want to add them)
      Object.keys(questionCategories).forEach((category) => {
        const categoryBtn = document.getElementById(`random-${category}-btn`);
        if (categoryBtn) {
          categoryBtn.addEventListener('click', () => insertRandomQuestion(category));
        }
      });
    });

    const form = document.getElementById('ama-form');

    form.addEventListener('submit', function (e) {
      e.preventDefault();

      const name = document.getElementById('name').value;
      const email = document.getElementById('email').value;
      const school = document.getElementById('school').value;
      const question = document.getElementById('question').value;
      const agree = document.getElementById('agree').checked ? 'Yes' : 'No';
      const formUrl =
        'https://docs.google.com/forms/d/e/1FAIpQLSdyYW7LxArIDBkt4tdzS6R2tsx0t2lAlNimuiC71EpuycLPmg/formResponse';
      const data = new FormData();

      data.append('entry.210603281', name); // optional name
      data.append('entry.1488918494', school); // optional school
      data.append('entry.1434691752', email); // optional email
      data.append('entry.1793598279', question); // your question
      if (agree) {
        data.append('entry.2102617965', 'I have read and agree to follow the question guidelines.');
      }

      fetch(formUrl, {
        method: 'POST',
        mode: 'no-cors',
        body: data,
      })
        .then(() => {
          alert('Thanks! Your question was submitted.');
          form.reset();
        })
        .catch((err) => {
          console.error('Submission error:', err);
          alert('Oops! Something went wrong.');
        });
    });
  </script>

  <!-- Response Section -->
  <div class="hidden">
    <QuestionsAndAnswers
      title="Questions & Answers Transcript"
      subtitle="Here are some questions we've already received and answered."
      questionsandanswers={[
        {
          question: `What is the purpose of BLAST in bioinformatics?`,
          submittedByName: 'Brenda Smith',
          submittedByTitle: '3rd grade, Sunnyvale Elementary',
          answer:
            'BLAST (Basic Local Alignment Search Tool) is used to find regions of similarity between sequences. It compares a query sequence against a database to identify matching sequences, often used for gene or protein identification.',
          name: 'Shayna Stein, Ph.D.',
          job: 'Senior Bioinformatics Scientist @ Frontier Medicines',
        },
        {
          question: `What is a genome?`,
          submittedByName: 'James Lee',
          submittedByTitle: '1st grade, Sunnyvale Elementary',
          answer:
            'A genome is the complete set of DNA, including all of its genes, in an organism. It contains all the information needed for the structure, function, and regulation of an organismâ€™s cells and tissues.',
          name: 'Lina Faller, Ph.D.',
          job: 'Bioinformatics Leader',
          image: {
            src: '~/assets/images/team_members/lina.jpg',
            alt: 'Lina Faller Image',
          },
        },
        {
          question: `What is the difference between DNA and RNA?`,
          submittedByName: 'Tommy Johnson',
          submittedByTitle: '6th grade, Raindrop Middle School',
          answer:
            'DNA is double-stranded, uses the base T (thymine), and stores genetic information. RNA is single-stranded, uses U (uracil) instead of T, and is involved in protein synthesis.',
          name: 'Samantha Klasfeld, Ph.D.',
          job: 'Bioinformatics Postdoctoral Fellow',
          image: {
            src: '~/assets/images/team_members/samanthaklasfeld.jpeg',
            alt: 'Samantha Klasfeld Image',
          },
        },
      ]}
      callToAction={{
        target: '_blank',
        text: 'More testimonials...',
        href: 'https://github.com/onwidget/astrowind',
        icon: 'tabler:chevron-right',
      }}
    />
  </div>
</div>
