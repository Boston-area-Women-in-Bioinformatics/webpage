---
import type { ItemGrid as Props } from '~/types';
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';

const { items = [], columns, defaultIcon = '', classes = {} } = Astro.props;

const {
  container: containerClass = '',
  // container: containerClass = "sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3",
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary',
} = classes;
---

{
  items && (
    <div
      class={twMerge(
        `grid gap-8 gap-x-12 sm:gap-y-8 ${
          columns === 4
            ? 'lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2'
            : columns === 3
              ? 'lg:grid-cols-3 sm:grid-cols-2'
              : columns === 2
                ? 'sm:grid-cols-2 '
                : ''
        }`,
        containerClass
      )}
    >
      {items.map(({ title, description, icon, callToAction, classes: itemClasses = {} }) => {
        const CardWrapper = callToAction?.href ? 'a' : 'div';
        const cardProps = callToAction?.href
          ? {
              href: callToAction.href,
              target: callToAction.target,
              class: twMerge(
                'relative flex flex-col intersect-once intersect-quarter intercept-no-queue motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade cursor-pointer hover:shadow-2xl hover:scale-105 dark:hover:shadow-2xl dark:hover:shadow-lime-400/20 transition-all duration-300',
                panelClass,
                itemClasses?.panel
              ),
            }
          : {
              class: twMerge(
                'relative flex flex-col intersect-once intersect-quarter intercept-no-queue motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade',
                panelClass,
                itemClasses?.panel
              ),
            };

        return (
          <CardWrapper {...cardProps}>
            {(icon || defaultIcon) && (
              <Icon name={icon || defaultIcon} class={twMerge('mb-2 w-10 h-10', defaultIconClass, itemClasses?.icon)} />
            )}
            <div class={twMerge('text-xl font-bold text-gray-900 dark:text-slate-100', titleClass, itemClasses?.title)}>
              {title}
            </div>
            {description && (
              <p
                class={twMerge('text-muted dark:text-slate-300 mt-2', descriptionClass, itemClasses?.description)}
                set:html={description}
              />
            )}
          </CardWrapper>
        );
      })}
    </div>
  )
}
