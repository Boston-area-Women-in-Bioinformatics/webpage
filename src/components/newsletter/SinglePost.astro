---
import { Icon } from 'astro-icon/components';

import Image from '~/components/common/Image.astro';
import SocialShare from '~/components/common/SocialShare.astro';
import { getFormattedDate } from '~/utils/utils';
import type { Newsletter } from '~/types';
import HeaderImage from '~/assets/images/newsletter_header.png';

export interface Props {
  post: Newsletter;
  url: string | URL;
}

const { post, url } = Astro.props;

// DEBUG: print keys so you can confirm the shape
//console.log('DEBUG: post keys =', Object.keys(post ?? {}));

// normalize possible component locations (MDX / Astro content collections vary)
const ContentComponent = post?.Content ?? post?.content ?? null;
---

<section class="py-8 sm:py-16 lg:py-20 mx-auto">
  <article>
    <header class="intersect-once intersect-quarter motion-safe:md:intersect:animate-fade">
      <div class="flex justify-between flex-col sm:flex-row max-w-3xl mx-auto mt-0 mb-2 px-4 sm:px-6 sm:items-center">
        <p>
          <Icon name="tabler:news" class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400" /> Issue-{
            String(post.issue).padStart(3, '0')
          }
          <Icon name="tabler:clock" class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400" />
          <time datetime={String(post.publishDate)} class="inline-block">{getFormattedDate(post.publishDate)}</time>
          {
            post.authors?.length && (
              <>
                {' '}
                ·{' '}
                <Icon
                  name={post.authors.length > 1 ? 'tabler:users' : 'tabler:user'}
                  class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400"
                />
                {post.authors &&
                  post.authors.map((author, index, array) => {
                    const isLast = index === array.length - 1;
                    return (
                      <span class="inline-block whitespace-nowrap">
                        <span class="mr-1" /> {/* Inserts a space before the name */}
                        {author.url ? (
                          <a href={author.url} class="hover:underline">
                            {author.name}
                            {!isLast && ','}
                          </a>
                        ) : (
                          <span class="hover:underline">
                            {author.name}
                            {!isLast && ','}
                          </span>
                        )}
                      </span>
                    );
                  })}
              </>
            )
          }
          {
            post.readingTime && (
              <>
                &nbsp;·
                <>
                  <Icon name="tabler:book" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
                  <span>{post.readingTime} min read</span>
                </>
              </>
            )
          }
        </p>
      </div>
      <div
        class="bg-gray-100 dark:bg-gray-600 border border-gray-900 dark:border-gray-400 mx-auto mb-6 block max-w-[900px] text-gray-900 dark:text-gray-300 text-sm font-medium px-4"
      >
        <div class="py-4 mx-auto">
          <Image
            src={HeaderImage}
            width="900"
            decoding="async"
            class="block max-w-[900px] w-full h-auto border border-gray-900 dark:border-gray-400"
            loading="lazy"
            alt="BWIB lunch meetup."
          />
        </div>
        <div class="block max-w-[900px] w-full border-t border-gray-900 dark:border-gray-400"></div>
        <h1
          class="px-4 py-8 sm:px-6 mx-auto text-4xl md:text-5xl font-bold leading-tighter tracking-tighter font-heading"
        >
          {post.title}
        </h1>
        <div
          class="mx-auto px-6 sm:px-6
         max-w-none
         prose prose-lg lg:prose-xl
         dark:prose-invert
         dark:prose-headings:text-slate-300
         prose-headings:font-heading
         prose-headings:leading-tighter
         prose-headings:tracking-tighter
         prose-headings:font-bold
         prose-a:text-primary dark:prose-a:text-blue-400
         prose-img:rounded-md prose-img:shadow-lg
         mt-8
         prose-headings:scroll-mt-[80px]
         prose-li:my-0
         break-words /* ensures long URLs/text wrap */"
        >
          {ContentComponent ? <ContentComponent /> : <slot />}
        </div>

        <div class="mx-auto px-6 sm:px-6 max-w-3xl mt-8 flex justify-between flex-col sm:flex-row">
          <SocialShare
            url={url}
            text={post.title}
            class="mt-5 sm:mt-1 align-middle text-gray-500 dark:text-slate-600"
          />
        </div>
      </div>
    </header>
  </article>
</section>
