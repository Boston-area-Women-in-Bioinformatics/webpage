---
import { Icon } from 'astro-icon/components';

import Image from '~/components/common/Image.astro';
import SocialShare from '~/components/common/SocialShare.astro';
import { getFormattedDate } from '~/utils/utils';
import type { Newsletter } from '~/types';
import HeaderImage from '~/assets/images/newsletter_header.png';
import Heading2 from '~/components/newsletter/Heading2.jsx';

export interface Props {
  post: Newsletter;
  url: string | URL;
}

const { post, url } = Astro.props;

const isRemoteImage = typeof post.image === 'string' && post.image.startsWith('http');
const imageWidth = post.image?.width ?? 900;
const imageHeight = post.image?.height ?? 506;
---

<section class="py-8 sm:py-16 lg:py-20 mx-auto">
  <article>
    <header
      class={post.image
        ? 'intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade'
        : 'intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade'}
    >
      <div class="flex justify-between flex-col sm:flex-row max-w-3xl mx-auto mt-0 mb-2 px-4 sm:px-6 sm:items-center">
        <p>
          <Icon name="tabler:clock" class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400" />
          <time datetime={String(post.publishDate)} class="inline-block">{getFormattedDate(post.publishDate)}</time>
          {
            post.authors?.length && (
              <>
                {' '}
                ·{' '}
                <Icon
                  name={post.authors.length > 1 ? 'tabler:users' : 'tabler:user'}
                  class="w-4 h-4 inline-block -mt-0.5 dark:text-gray-400"
                />
                {post.authors &&
                  post.authors.map((author, index, array) => {
                    const isLast = index === array.length - 1;
                    return (
                      <span class="inline-block whitespace-nowrap">
                        <span class="mr-1" /> {/* Inserts a space before the name */}
                        {author.url ? (
                          <a href={author.url} class="hover:underline">
                            {author.name}
                            {!isLast && ','}
                          </a>
                        ) : (
                          <span class="hover:underline">
                            {author.name}
                            {!isLast && ','}
                          </span>
                        )}
                      </span>
                    );
                  })}
              </>
            )
          }
          {
            post.readingTime && (
              <>
                &nbsp;·
                <>
                  <Icon name="tabler:book" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
                  <span>{post.readingTime} min read</span>
                </>
              </>
            )
          }
        </p>
      </div>
      <div
        class="bg-gray-100 dark:bg-gray-600 border border-gray-900 dark:border-gray-400 mx-auto mb-6 block max-w-[900px] text-gray-900 dark:text-gray-300 text-sm font-medium px-4"
      >
        <div class="py-4 mx-auto">
          <Image
            src={HeaderImage}
            width="900"
            decoding="async"
            class="block max-w-[900px] w-full h-auto border border-gray-900 dark:border-gray-400"
            loading="lazy"
            alt="BWIB lunch meetup."
          />
        </div>
        <div class="block max-w-[900px] w- border-t border-gray-900 dark:border-gray-400"></div>
        <h1
          class="px-4 py-8 sm:px-6 max-w-3xl mx-auto text-4xl md:text-5xl font-bold leading-tighter tracking-tighter font-heading"
        >
          {post.title}
        </h1>
        <p
          class="max-w-3xl mx-auto mt-4 mb-8 px-4 sm:px-6 text-xl md:text-2xl text-muted dark:text-slate-400 text-justify"
        >
          {post.excerpt}
        </p>

        {
          post.image ? (
            isRemoteImage ? (
              <img
                src={post.image}
                class="block max-w-[500px] w-full h-auto mx-auto mb-6 sm:rounded-md bg-gray-400 dark:bg-slate-700 border border-gray-900 dark:border-gray-400"
                alt={post?.excerpt || ''}
                width={imageWidth}
                height={imageHeight}
                loading="eager"
                decoding="async"
              />
            ) : (
              <Image
                src={post.image}
                class="block max-w-[900px] w-full h-auto mx-auto mb-6 sm:rounded-md bg-gray-400 dark:bg-slate-700 border border-gray-900 dark:border-gray-400"
                widths={[400, 600, 900]}
                sizes="(max-width: 900px) 100vw, 900px"
                alt={post?.excerpt || ''}
                width={imageWidth}
                height={imageHeight}
                loading="eager"
                decoding="async"
              />
            )
          ) : (
            <div class="max-w-3xl mx-auto px-4 sm:px-6">
              <div class="border-t dark:border-slate-700" />
            </div>
          )
        }
        {
          post.imageDescription && (
            <p class="max-w-3xl mx-auto px-4 sm:px-6 text-muted dark:text-slate-400 text-sm italic">
              {post.imageDescription}
            </p>
          )
        }<div
  class="prose max-w-none prose-headings:font-bold prose-headings:tracking-tight prose-a:text-blue-600 dark:prose-invert dark:prose-a:text-blue-400 prose-img:rounded-md prose-img:shadow-md prose-li:my-1"
>
  {post.Content && <post.Content components={{ h2: Heading2 }} />}
</div>
        <div class="mx-auto px-6 sm:px-6 max-w-3xl mt-8 flex justify-between flex-col sm:flex-row">
          <SocialShare
            url={url}
            text={post.title}
            class="mt-5 sm:mt-1 align-middle text-gray-500 dark:text-slate-600"
          />
        </div>
      </div>
    </header>
  </article>
</section>
